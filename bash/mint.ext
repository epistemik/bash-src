#!/bin/bash
################################################################################
#
# mh.satto@gmail.com
#
################################################################################

# set directory colors
# already done in .bashrc
#d=.dircolors
#test -r $d && eval "$(dircolors $d)"

shopt -s histverify histappend

# Color mapping
  grey='\[\033[1;30m\]'
  GREY='\[\033[1;90m\]'
   red='\[\033[0;31m\]'
   RED='\[\033[1;91m\]'
 green='\[\033[0;32m\]'
 GREEN='\[\033[1;92m\]'
yellow='\[\033[0;33m\]'
YELLOW='\[\033[1;93m\]'
purple='\[\033[0;35m\]'
PURPLE='\[\033[1;95m\]'
 white='\[\033[0;37m\]'
 WHITE='\[\033[1;97m\]'
  blue='\[\033[0;34m\]'
  BLUE='\[\033[1;94m\]'
  cyan='\[\033[0;36m\]'
  CYAN='\[\033[1;96m\]'
    NC='\[\033[0m\]'
COLOR_RESET="\[\e[30;0m\]"
#export PS1="${HILITE}\w${DIV} | ${HILITE}\d \t${DIV} | ${HILITE}\u@\h${DIV} | ${HILITE}\s \V${DIV}\r\n${HILITE}\!${DIV} >$COLOR_RESET " ;

# change the title of the terminal to reflect the current location (without full path): \W
# and the number of jobs running in this terminal: \j
tt_default='\[\e]0;\W:\j$TTA\007\]'
# add additional information to the terminal title
TTA=''

DIV=$RED
# prompt
PS1="${tt_default}${cyan}\w${DIV} | ${green}\d \t${DIV} | ${yellow}\u@\h${DIV} | ${purple}\s \V${DIV} \$(git_div) ${CYAN}\$(git_branch)\n${GREEN}\!${RED} >$NC "

# change terminal title to a particular value
chtt ()
{
  if [[ $1 ]] ; then
    # need to get the value from $1 but keep TTA as a variable
    var="\[\e]0;$1"
    term_title=${var}'${TTA}\007\]'
  else
    term_title=${tt_default}
  fi
  PS1="${term_title}${cyan}\w${DIV} | ${green}\d \t${DIV} | ${yellow}\u@\h${DIV} | ${purple}\s \V${DIV} \$(git_div) ${CYAN}\$(git_branch)\n${GREEN}\!${RED} >$NC "
}

# set var TTA to a particular value
setta ()
{
  if [[ $1 ]] ; then
    TTA=":$1"
  else
    TTA=''
  fi
}

# track git branch
git_branch()
{
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
git_div()
{
  if [[ $(git_branch) ]] ; then
    echo -n '|'
  fi
}

ORIG_PATH=$PATH
MY_BIN=$HOME/bin
# check and add ~/bin to PATH if not yet present
if [[ ":$PATH:" == *":$MY_BIN:"* ]]; then
  echo "PATH already contains $MY_BIN"
else
    echo "$HOME/bin added to PATH."
    PATH=$HOME/bin:$ORIG_PATH
fi

# check and add ~/.local/bin to PATH if not yet present
LOCAL_BIN=$HOME/.local/bin
if [[ ":$PATH:" == *":$LOCAL_BIN:"* ]]; then
  echo "PATH already contains $LOCAL_BIN"
else
    echo "$LOCAL_BIN added to PATH."
    PATH=$LOCAL_BIN:$PATH
fi

OPT_BIN=/opt/bin
# check and add /opt/bin to PATH if not yet present
if [[ ":$PATH:" == *":$OPT_BIN:"* ]]; then
  echo "PATH already contains $OPT_BIN"
else
    echo "$OPT_BIN added to PATH."
    PATH=$OPT_BIN:$PATH
fi

HOME_OPT_BIN=$HOME/opt/bin
# check and add ~/opt/bin to PATH if not yet present
if [[ ":$PATH:" == *":$HOME_OPT_BIN:"* ]]; then
  echo "PATH already contains $HOME_OPT_BIN"
else
    echo "$HOME_OPT_BIN added to PATH."
    PATH=$HOME_OPT_BIN:$PATH
fi

alias sobx='source $HOME/.bashext'

# Gnucash build
export GTEST_ROOT=$HOME/.local/src/googletest/googletest
export GMOCK_ROOT=$HOME/.local/src/googletest/googlemock

# aliases
test -s $HOME/.bashals && source $HOME/.bashals
alias soba='source $HOME/.bashals'

# functions
test -s $HOME/.bashfxn && source $HOME/.bashfxn
alias sobf="source $HOME/.bashfxn"

########################################
# END OF SCRIPT
BASHEXT_LOADED="TRUE"
echo "LOADED $HOME/.bashext"
cowfort
# END OF SCRIPT
########################################
